// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO3

package io.scalaland.chimney.examples.pb.addressbook

@SerialVersionUID(0L)
final case class AddressBook(
  people: _root_.scala.collection.Seq[io.scalaland.chimney.examples.pb.addressbook.Person] =
    _root_.scala.collection.Seq.empty
)

/** @param id
  *   Unique ID number for this person.
  */
@SerialVersionUID(0L)
final case class Person(name: _root_.scala.Predef.String = "",
                        id: _root_.scala.Int = 0,
                        email: _root_.scala.Predef.String = "",
                        phones: _root_.scala.collection.Seq[io.scalaland.chimney.examples.pb.addressbook.PhoneNumber] =
                          _root_.scala.collection.Seq.empty)
@SerialVersionUID(0L)
final case class PhoneNumber(number: _root_.scala.Predef.String = "",
                             `type`: io.scalaland.chimney.examples.pb.addressbook.PhoneType =
                               io.scalaland.chimney.examples.pb.addressbook.PhoneType.MOBILE)

sealed trait PhoneType {
  type EnumType = PhoneType
  def isMobile: _root_.scala.Boolean = false
  def isHome: _root_.scala.Boolean = false
  def isWork: _root_.scala.Boolean = false
}

object PhoneType {

  @SerialVersionUID(0L)
  case object MOBILE extends PhoneType {
    val value = 0
    val index = 0
    val name = "MOBILE"
    override def isMobile: _root_.scala.Boolean = true
  }

  @SerialVersionUID(0L)
  case object HOME extends PhoneType {
    val value = 1
    val index = 1
    val name = "HOME"
    override def isHome: _root_.scala.Boolean = true
  }

  @SerialVersionUID(0L)
  case object WORK extends PhoneType {
    val value = 2
    val index = 2
    val name = "WORK"
    override def isWork: _root_.scala.Boolean = true
  }

  @SerialVersionUID(0L)
  final case class Unrecognized(value: _root_.scala.Int) extends PhoneType

  lazy val values = scala.collection.Seq(MOBILE, HOME, WORK)
  def fromValue(value: _root_.scala.Int): PhoneType = value match {
    case 0       => MOBILE
    case 1       => HOME
    case 2       => WORK
    case __other => Unrecognized(__other)
  }
}
